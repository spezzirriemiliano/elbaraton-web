.ba-cart-menu-layout([@layoutAnimation], *ngIf="menuService.getShowCartMenu()", (click)="closeMenu()")
.ba-cart-menu-container([@menuAnimation], *ngIf="menuService.getShowCartMenu()")
    .ba-cart-menu-header
        .cart-text
            i.fas.fa-shopping-cart
            span  Carrito de compras
        .icon.close-menu((click)="closeMenu()", matRipple)
            i.fas.fa-times
    .ba-cart-menu-content
        div(*ngIf="cartService.countProducts() == 0")
            .no-products No hay productos en el carrito
            .keep-buying-container
                button.keep-buying(mat-stroked-button, color="primary", (click)="closeMenu()") Seguir comprando
        div(*ngIf="cartService.countProducts() > 0")
            .cart-product(*ngFor="let cartProduct of cartService.getCartproducts()")
                ba-cart-item([cartProduct]="cartProduct")
            .cart-total
                .total-text Total
                .amount-text {{displayTotal() | currency: '$ ' : 'symbol' : '1.0-0'}}
            .ba-payment-section-container
                ba-payment-section([cardData]="cardData")
            .mail-container
                mat-form-field
                    input(matInput, placeholder="Email", [formControl]="emailFormControl", [(ngModel)]="email")
                    mat-error(*ngIf="emailFormControl.hasError('email') && !emailFormControl.hasError('required')")
                        span Ingrese una direccion de email v√°lida
                    mat-error(*ngIf="emailFormControl.hasError('required')")
                        span El email es <strong>requerido</strong>
            .buy-button-container
                button(mat-stroked-button, color="primary", [disabled]="!validateBuy()", (click)="buyCart()") Comprar